// src/main/java/com/chicu/neurotradebot/telegram/view/aimenu/strtegymenu/MlTpSlConfigMenuBuilder.java
package com.chicu.neurotradebot.telegram.view.aimenu.strtegymenu;

import com.chicu.neurotradebot.entity.AiTradeSettings;
import com.chicu.neurotradebot.entity.MlStrategyConfig;
import com.chicu.neurotradebot.service.AiTradeSettingsService;
import com.chicu.neurotradebot.telegram.TelegramSender;
import lombok.RequiredArgsConstructor;
import org.springframework.stereotype.Component;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.InlineKeyboardButton;

import java.math.BigDecimal;
import java.time.Duration;
import java.util.List;

@Component
@RequiredArgsConstructor
public class MlTpSlConfigMenuBuilder {

    private final AiTradeSettingsService settingsService;
    private final TelegramSender sender;

    private static final MlStrategyConfig DEFAULT = MlStrategyConfig.builder()
        .totalCapitalUsd(BigDecimal.valueOf(100))
        .entryRsiThreshold(32.0)
        .lookbackPeriod(Duration.ofHours(1))
        .predictUrl("http://localhost:5000/predict")
        .build();

    public void buildOrEditMenu(Long chatId, Integer messageId) {
        AiTradeSettings s = settingsService.getByChatId(chatId);
        MlStrategyConfig cfg = s.getMlStrategyConfig();

        boolean isDefault =
            cfg.getTotalCapitalUsd().equals(DEFAULT.getTotalCapitalUsd()) &&
            cfg.getEntryRsiThreshold() == DEFAULT.getEntryRsiThreshold() &&
            cfg.getLookbackPeriod().equals(DEFAULT.getLookbackPeriod()) &&
            cfg.getPredictUrl().equals(DEFAULT.getPredictUrl());

        // –¢–µ–∫—Å—Ç –º–µ–Ω—é
        StringBuilder text = new StringBuilder();
        text.append(isDefault
            ? "*–î–µ—Ñ–æ–ª—Ç–Ω—ã–µ* –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ ML TP/SL\n"
            : "*–í–∞—à–∏* –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ ML TP/SL\n");
        text.append("‚Ä¢ –ö–∞–ø–∏—Ç–∞–ª (USD): ").append(cfg.getTotalCapitalUsd()).append("\n");
        text.append("‚Ä¢ –ü–æ—Ä–æ–≥ RSI: ").append(cfg.getEntryRsiThreshold()).append("\n");
        text.append("‚Ä¢ –û–±—Ä–∞—Ç–Ω—ã–π –æ—Ç—Å—á—ë—Ç (–±–∞—Ä–æ–≤): ").append(cfg.getLookbackPeriod().toHours()).append(" —á\n");
        text.append("‚Ä¢ URL –ø—Ä–µ–¥–∏–∫—Ç–∞: ").append(cfg.getPredictUrl()).append("\n\n");

        // –ö–Ω–æ–ø–∫–∏
        InlineKeyboardMarkup kb = InlineKeyboardMarkup.builder()
            .keyboard(List.of(
                // –∫–∞–ø–∏—Ç–∞–ª
                List.of(
                  InlineKeyboardButton.builder().text("‚Äì –ö–∞–ø–∏—Ç–∞–ª").callbackData("ml:decCapital").build(),
                  InlineKeyboardButton.builder().text("–ö–∞–ø–∏—Ç–∞–ª").callbackData("ml:menu").build(),
                  InlineKeyboardButton.builder().text("+ –ö–∞–ø–∏—Ç–∞–ª").callbackData("ml:incCapital").build()
                ),
                // RSI
                List.of(
                  InlineKeyboardButton.builder().text("‚Äì RSI").callbackData("ml:decRsi").build(),
                  InlineKeyboardButton.builder().text("RSI").callbackData("ml:menu").build(),
                  InlineKeyboardButton.builder().text("+ RSI").callbackData("ml:incRsi").build()
                ),
                // lookback
                List.of(
                  InlineKeyboardButton.builder().text("‚Äì –ë–∞—Ä–æ–≤").callbackData("ml:decLookback").build(),
                  InlineKeyboardButton.builder().text("–ë–∞—Ä—ã").callbackData("ml:menu").build(),
                  InlineKeyboardButton.builder().text("+ –ë–∞—Ä–æ–≤").callbackData("ml:incLookback").build()
                ),
                // URL
                List.of(
                  InlineKeyboardButton.builder().text("‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å URL").callbackData("ml:setUrl").build()
                ),
                // —Å–±—Ä–æ—Å –∏ –Ω–∞–∑–∞–¥
                List.of(
                  InlineKeyboardButton.builder().text("üîÑ –°–±—Ä–æ—Å–∏—Ç—å –≤—Å–µ").callbackData("ml:reset").build(),
                  InlineKeyboardButton.builder().text("‚óÄÔ∏è –ù–∞–∑–∞–¥").callbackData("ai_strategies").build()
                )
            ))
            .build();

        SendMessage msg = SendMessage.builder()
            .chatId(chatId.toString())
            .text(text.toString())
            .parseMode("Markdown")
            .replyMarkup(kb)
            .build();

        if (messageId == null) {
            sender.sendMessage(chatId, msg.getText(), kb);
        } else {
            sender.editMessage(chatId, messageId, msg.getText(), kb);
        }
    }
}
