package com.chicu.neurotradebot.telegram.view;// src/main/java/com/chicu/neurotradebot/view/AiTradeMenuBuilder.java

import com.chicu.neurotradebot.telegram.handler.MenuDefinition;
import org.springframework.stereotype.Component;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.InlineKeyboardButton;

import java.util.List;
import java.util.Set;

@Component
public class AiTradeMenuBuilder implements MenuDefinition {

    @Override
    public Set<String> keys() {
        return Set.of("ai_control");
    }

    public String title() {
        return "ü§ñ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ AI-—Ä–µ–∂–∏–º–∞";
    }

    public InlineKeyboardMarkup markup(Long chatId) {
        // –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        var toggleAi = InlineKeyboardButton.builder()
                .text("ü§ñ –í–∫–ª—é—á–∏—Ç—å –∏–ª–∏ –æ—Ç–∫–ª—é—á–∏—Ç—å AI-—Ä–µ–∂–∏–º")
                .callbackData("toggle_ai")
                .build();

        var tradeMode = InlineKeyboardButton.builder()
                .text("üîÄ –†–µ–∂–∏–º —Ç–æ—Ä–≥–æ–≤–ª–∏ (Spot/Futures/Margin)")
                .callbackData("ai_trade_mode")
                .build();

        var pairs = InlineKeyboardButton.builder()
                .text("üí± –í–∞–ª—é—Ç–Ω—ã–µ –ø–∞—Ä—ã")
                .callbackData("ai_pairs")
                .build();

        var strategy = InlineKeyboardButton.builder()
                .text("üß† –°—Ç—Ä–∞—Ç–µ–≥–∏–∏ AI")
                .callbackData("ai_strategy")
                .build();
        var risk = InlineKeyboardButton.builder()
                .text("‚ö†Ô∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∏—Å–∫–∞–º–∏")
                .callbackData("ai_risk")
                .build();

        var scan = InlineKeyboardButton.builder()
                .text("‚è± –ò–Ω—Ç–µ—Ä–≤–∞–ª —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è")
                .callbackData("ai_scan_interval")
                .build();
        var notify = InlineKeyboardButton.builder()
                .text("üîî –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π")
                .callbackData("ai_notify")
                .build();

        // –ü—Ä–æ—Ñ–∏–ª–∏ –∏ –∞–≤—Ç–æ–Ω–∞—Å—Ç—Ä–æ–π–∫–∞
        var profiles = InlineKeyboardButton.builder()
                .text("üíæ –ü—Ä–æ—Ñ–∏–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫")
                .callbackData("ai_profiles")
                .build();
        var autoConfig = InlineKeyboardButton.builder()
                .text("‚ú® –ê–≤—Ç–æ–Ω–∞—Å—Ç—Ä–æ–π–∫–∞ AI")
                .callbackData("ai_autoconfig")
                .build();

        // –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏ –∞–Ω–∞–ª–∏–∑
        var analytics = InlineKeyboardButton.builder()
                .text("üìä –ì—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑")
                .callbackData("ai_analytics")
                .build();
        var backtest = InlineKeyboardButton.builder()
                .text("üß™ –ó–∞–ø—É—Å—Ç–∏—Ç—å Backtest")
                .callbackData("ai_backtest")
                .build();

        var positions = InlineKeyboardButton.builder()
                .text("üóÇ –¢–µ–∫—É—â–∏–µ –ø–æ–∑–∏—Ü–∏–∏")
                .callbackData("ai_positions")
                .build();
        var history = InlineKeyboardButton.builder()
                .text("üìú –ò—Å—Ç–æ—Ä–∏—è —Å–¥–µ–ª–æ–∫")
                .callbackData("ai_history")
                .build();

        // –°–ø—Ä–∞–≤–∫–∞ –∏ –≤–æ–∑–≤—Ä–∞—Ç
        var help = InlineKeyboardButton.builder()
                .text("‚ùì –ü–æ–º–æ—â—å / FAQ")
                .callbackData("ai_help")
                .build();
        var back = InlineKeyboardButton.builder()
                .text("‚¨ÖÔ∏è –ù–∞–∑–∞–¥")
                .callbackData("start_menu")
                .build();

        return InlineKeyboardMarkup.builder()
                .keyboard(List.of(
                        // 1. –í–∫–ª—é—á–µ–Ω–∏–µ AI
                        List.of(toggleAi),

                        // 2. –í—ã–±–æ—Ä —Ä–µ–∂–∏–º–∞ –∏ –ø–∞—Ä
                        List.of(tradeMode, pairs),

                        // 3. –°—Ç—Ä–∞—Ç–µ–≥–∏—è –∏ —Ä–∏—Å–∫–∏
                        List.of(strategy, risk),

                        // 4. –ò–Ω—Ç–µ—Ä–≤–∞–ª –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
                        List.of(scan, notify),

                        // 5. –ü—Ä–æ—Ñ–∏–ª–∏ –∏ –∞–≤—Ç–æ–Ω–∞—Å—Ç—Ä–æ–π–∫–∞
                        List.of(profiles, autoConfig),

                        // 6. –ì—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ –∏ backtest
                        List.of(analytics, backtest),

                        // 7. –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø–æ–∑–∏—Ü–∏–π –∏ –∏—Å—Ç–æ—Ä–∏–∏
                        List.of(positions, history),

                        // 8. –ü–æ–º–æ—â—å
                        List.of(help),

                        // 9. –í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
                        List.of(back)
                ))
                .build();
    }
}
