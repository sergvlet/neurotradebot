package com.chicu.neurotradebot.telegram.handler.callback;

import com.chicu.neurotradebot.subscription.service.AccessControlService;
import com.chicu.neurotradebot.telegram.handler.menu.StartMenuBuilder;
import com.chicu.neurotradebot.user.service.ExchangeSettingsService;
import lombok.RequiredArgsConstructor;
import org.springframework.stereotype.Component;
import org.telegram.telegrambots.meta.api.methods.updatingmessages.EditMessageText;

@Component
@RequiredArgsConstructor
public class SettingsCallbackHandler {

    private final StartMenuBuilder menuBuilder;
    private final AccessControlService accessControlService;
    private final ExchangeSettingsService exchangeSettingsService;

    public EditMessageText handle(long chatId, Integer messageId) {
        if (!accessControlService.hasActiveSubscription(chatId)) {
            return EditMessageText.builder()
                    .chatId(String.valueOf(chatId))
                    .messageId(messageId)
                    .text("‚õî –£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏.\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–∂–º–∏—Ç–µ üë§ –ü–æ–¥–ø–∏—Å–∫–∞ –∏ –≤—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π —Ç–∞—Ä–∏—Ñ.")
                    .build();
        }

        boolean useTestnet = exchangeSettingsService.isTestnetEnabled(chatId, "BINANCE");
        String network = useTestnet ? "Testnet (—Ç–µ—Å—Ç–æ–≤–∞—è —Å–µ—Ç—å)" : "Real (—Ä–µ–∞–ª—å–Ω–∞—è —Å–µ—Ç—å)";

        return EditMessageText.builder()
                .chatId(String.valueOf(chatId))
                .messageId(messageId)
                .text("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–æ—Ä–≥–æ–≤–ª–∏:\n\n–¢–µ–∫—É—â–∞—è —Å–µ—Ç—å: " + network + "\n\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä:\nüîπ –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Ä–µ–∂–∏–º —Ç–æ—Ä–≥–æ–≤–ª–∏ (–¢–µ—Å—Ç/–†–µ–∞–ª)\nüîπ –ù–∞—Å—Ç—Ä–æ–∏—Ç—å API-–∫–ª—é—á–∏\nüîπ –í—ã–±—Ä–∞—Ç—å –±–∏—Ä–∂—É")
                .replyMarkup(menuBuilder.buildSettingsMenu())
                .build();
    }

}
