package com.chicu.neurotradebot.telegram.handler.callback;

import com.chicu.neurotradebot.exchange.core.ExchangeClient;
import com.chicu.neurotradebot.exchange.core.ExchangeRegistry;
import com.chicu.neurotradebot.telegram.handler.menu.StartMenuBuilder;
import lombok.RequiredArgsConstructor;
import org.springframework.stereotype.Component;
import org.telegram.telegrambots.meta.api.methods.updatingmessages.EditMessageText;

import java.math.BigDecimal;
import java.util.Comparator;
import java.util.Map;
import java.util.stream.Collectors;

@Component
@RequiredArgsConstructor
public class BalanceCallbackHandler {

    private final ExchangeRegistry exchangeRegistry;
    private final StartMenuBuilder menuBuilder; // ‚úÖ –¥–æ–±–∞–≤–ª—è–µ–º –º–µ–Ω—é!

    public EditMessageText handle(Long chatId, Integer messageId) {
        ExchangeClient client = exchangeRegistry.getClient("BINANCE"); // –ø–æ–∫–∞ –±–∏–Ω–∞–Ω—Å
        Map<String, BigDecimal> balances = client.getAllBalances(chatId);

        String balancesText = balances.entrySet().stream()
                .filter(entry -> entry.getValue().compareTo(BigDecimal.ZERO) > 0)
                .sorted(Map.Entry.<String, BigDecimal>comparingByValue(Comparator.reverseOrder()))
                .limit(20) // —Ç–æ–ø-20
                .map(entry -> "üîπ " + entry.getKey() + ": *" + entry.getValue() + "*")
                .collect(Collectors.joining("\n"));

        if (balancesText.isEmpty()) {
            balancesText = "üò¢ –ë–∞–ª–∞–Ω—Å–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.";
        }

        return EditMessageText.builder()
                .chatId(String.valueOf(chatId))
                .messageId(messageId)
                .text("""
                      üí∞ *–í–∞—à–∏ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –±–∞–ª–∞–Ω—Å—ã:*

                      """ + balancesText)
                .replyMarkup(menuBuilder.buildMainMenu()) // ‚úÖ –ø—Ä–∏–∫—Ä–µ–ø–ª—è–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
                .parseMode("Markdown")
                .build();
    }
}
