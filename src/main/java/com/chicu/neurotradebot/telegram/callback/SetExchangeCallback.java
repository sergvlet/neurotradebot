package com.chicu.neurotradebot.telegram.callback;

import com.chicu.neurotradebot.telegram.util.MessageUtils;
import com.chicu.neurotradebot.trade.enums.Exchange;
import com.chicu.neurotradebot.trade.service.UserApiKeysService;
import com.chicu.neurotradebot.trade.service.UserSettingsService;
import lombok.RequiredArgsConstructor;
import org.springframework.stereotype.Component;
import org.telegram.telegrambots.meta.bots.AbsSender;

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–æ–ª–±–µ–∫–∞ –≤—ã–±–æ—Ä–∞ –±–∏—Ä–∂–∏.
 * –ü–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤—ã–±—Ä–∞—Ç—å –±–∏—Ä–∂—É –∏ –ª–∏–±–æ —Å—Ä–∞–∑—É –ø–µ—Ä–µ–π—Ç–∏ –≤ –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ —Å–∏–º–≤–æ–ª–∞,
 * –ª–∏–±–æ –≤–≤–µ—Å—Ç–∏ API –∫–ª—é—á.
 */
@Component
@RequiredArgsConstructor
public class SetExchangeCallback implements CallbackProcessor {

    private final UserSettingsService settingsService;
    private final UserApiKeysService apiKeysService;
    private final MessageUtils messageUtils;
    private final ExchangeMenuCallback exchangeMenuCallback;

    private static final String API_KEY_TEST = "API_KEY_TEST";
    private static final String API_KEY_REAL = "API_KEY_REAL";

    /**
     * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–∏–ø –∫–æ–ª–±–µ–∫–∞ –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞.
     *
     * @return —Ç–∏–ø –∫–æ–ª–±–µ–∫–∞
     */
    @Override
    public BotCallback callback() {
        return BotCallback.SET_EXCHANGE;
    }

    /**
     * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–ª–±–µ–∫ –¥–ª—è –≤—ã–±–æ—Ä–∞ –±–∏—Ä–∂–∏ –∏ –¥–µ–π—Å—Ç–≤–∏–π —Å API –∫–ª—é—á–∞–º–∏.
     * –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç API –∫–ª—é—á–∏, –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç, –∏–ª–∏ —Å—Ä–∞–∑—É –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –≤ –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ —Å–∏–º–≤–æ–ª–∞.
     *
     * @param chatId      –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–∞—Ç–∞
     * @param messageId   –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
     * @param callbackData –¥–∞–Ω–Ω—ã–µ –∫–æ–ª–±–µ–∫–∞
     * @param sender      –æ–±—ä–µ–∫—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
     */
    @Override
    public void process(Long chatId, Integer messageId, String callbackData, AbsSender sender) {
        try {
            // –†–∞–∑–¥–µ–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –∫–æ–ª–±–µ–∫–∞, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—É—é –±–∏—Ä–∂—É
            String[] parts = callbackData.split(":");
            if (parts.length < 2) {
                messageUtils.editMessage(chatId, messageId, "‚ùå –û—à–∏–±–∫–∞: –±–∏—Ä–∂–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞", null, sender);
                return;
            }

            // –ü–æ–ª—É—á–∞–µ–º –±–∏—Ä–∂—É –∏–∑ –¥–∞–Ω–Ω—ã—Ö –∫–æ–ª–±–µ–∫–∞
            Exchange selected = Exchange.valueOf(parts[1]);

            // –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            var settings = settingsService.getOrCreate(chatId);
            settings.setExchange(selected);
            settingsService.setExchange(chatId, selected);

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ª–∏ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ä–µ–∂–∏–º (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
            boolean isDemo = settings.getTradeMode() == null || settings.getTradeMode().name().equals("DEMO");

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ API –∫–ª—é—á–∏
            boolean hasKeys = isDemo
                    ? apiKeysService.hasTestKeys(chatId, selected)
                    : apiKeysService.hasRealKeys(chatId, selected);

            if (hasKeys) {
                // ‚úÖ –ö–ª—é—á–∏ —É–∂–µ –µ—Å—Ç—å ‚Äî —Å—Ä–∞–∑—É –ø–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ —Å–∏–º–≤–æ–ª–∞
                exchangeMenuCallback.process(chatId, messageId, BotCallback.EXCHANGE_MENU.getValue(), sender);
            } else {
                // üîê –ö–ª—é—á–µ–π –Ω–µ—Ç ‚Äî –ø—Ä–æ—Å–∏–º –≤–≤–µ—Å—Ç–∏ API Key
                messageUtils.editMessage(chatId, messageId,
                        "üîê –í–≤–µ–¥–∏—Ç–µ API Key –¥–ª—è –±–∏—Ä–∂–∏ " + selected + (isDemo ? " (—Ç–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º):" : " (—Ä–µ–∞–ª—å–Ω—ã–π —Ä–µ–∂–∏–º):"),
                        null, sender);

                // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –≤–≤–æ–¥–∞ –¥–ª—è API –∫–ª—é—á–µ–π
                settingsService.setWaitingForInput(chatId,
                        (isDemo ? API_KEY_TEST : API_KEY_REAL) + ":" + selected.name());
            }
        } catch (IllegalArgumentException e) {
            // –ï—Å–ª–∏ –±–∏—Ä–∂–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
            messageUtils.editMessage(chatId, messageId, "‚ùå –û—à–∏–±–∫–∞: –Ω–µ–≤–µ—Ä–Ω–∞—è –±–∏—Ä–∂–∞", null, sender);
        } catch (Exception e) {
            // –õ–æ–≥–∏—Ä—É–µ–º –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –æ—à–∏–±–∫–∏
            messageUtils.editMessage(chatId, messageId, "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.", null, sender);
            e.printStackTrace();
        }
    }
}
