package com.chicu.neurotradebot.telegram.callback;

import com.chicu.neurotradebot.telegram.util.KeyboardService;
import com.chicu.neurotradebot.telegram.util.MessageUtils;
import com.chicu.neurotradebot.trade.enums.TradeType;
import com.chicu.neurotradebot.trade.service.UserSettingsService;
import lombok.RequiredArgsConstructor;
import org.springframework.stereotype.Component;
import org.telegram.telegrambots.meta.bots.AbsSender;

@Component
@RequiredArgsConstructor
public class SetTradeTypeCallback implements CallbackProcessor {

    private final UserSettingsService userSettingsService;
    private final KeyboardService keyboardService;
    private final MessageUtils messageUtils;

    @Override
    public BotCallback callback() {
        return BotCallback.SET_TRADE_TYPE;
    }

    @Override
    public void process(Long chatId, Integer messageId, String callbackData, AbsSender sender) {
        try {
            // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö callbackData
            if (callbackData == null || !callbackData.contains(":")) {
                messageUtils.editMessage(chatId, messageId, "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ä–µ–∂–∏–º–∞.", null, sender);
                return;
            }

            // –†–∞–∑–¥–µ–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –Ω–∞ —á–∞—Å—Ç–∏ –∏ –ø–æ–ª—É—á–∞–µ–º —Ç–∏–ø —Ç–æ—Ä–≥–æ–≤–ª–∏
            String[] parts = callbackData.split(":");
            if (parts.length < 2) {
                messageUtils.editMessage(chatId, messageId, "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ä–µ–∂–∏–º–∞.", null, sender);
                return;
            }

            TradeType type = TradeType.valueOf(parts[1]); // –ü—Ä–∏–º–µ—Ä: set_trade_type:AI

            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ä–µ–∂–∏–º –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö
            userSettingsService.setTradeType(chatId, type);

            // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞
            String text = type == TradeType.AI
                    ? "ü§ñ –†–µ–∂–∏–º —Ç–æ—Ä–≥–æ–≤–ª–∏: <b>AI</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
                    : "‚úã –†–µ–∂–∏–º —Ç–æ—Ä–≥–æ–≤–ª–∏: <b>–†—É—á–Ω–æ–π</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:";

            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –Ω–æ–≤—ã–º –º–µ–Ω—é
            messageUtils.editMessage(chatId, messageId, text, keyboardService.getTradingMenuByMode(chatId), sender);

        } catch (IllegalArgumentException e) {
            messageUtils.editMessage(chatId, messageId, "‚ùå –û—à–∏–±–∫–∞: –ù–µ–≤–µ—Ä–Ω–æ —É–∫–∞–∑–∞–Ω —Ä–µ–∂–∏–º —Ç–æ—Ä–≥–æ–≤–ª–∏.", null, sender);
        } catch (Exception e) {
            messageUtils.editMessage(chatId, messageId, "‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ä–µ–∂–∏–º–∞.", null, sender);
        }
    }
}
